<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
      internalLogFile="c:\Logs\Demo.Web-internal.txt">

	<variable name="BaseDir" value="C:\Logs\Demo.Web"/>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<target xsi:type="File" name="allfile" fileName="${BaseDir}\log-all-${shortdate}.csv" archiveFileName="${BaseDir}\archives\log-all-${shortdate}.{#}.csv" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="7" concurrentWrites="true" keepFileOpen="false"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<!--
		<target xsi:type="File" name="ownFile-web" fileName="${BaseDir}\log-ASP-NET-${shortdate}.csv" archiveFileName="${BaseDir}\archives\log-ASP-NET-${shortdate}.{#}.csv" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="7" concurrentWrites="true" keepFileOpen="false" 
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|" />-->

		<!-- File Target for all error messages with basic details -->
		<target xsi:type="File" name="errorFile" fileName="${BaseDir}\log-ERRORS-${shortdate}.csv" archiveFileName="${BaseDir}\archives\log-ERRORS-${shortdate}.{#}.csv" archiveEvery="Day" archiveNumbering="Rolling" maxArchiveFiles="7" concurrentWrites="true" keepFileOpen="false"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<!--
		<target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />-->
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="allfile" />

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<!--
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		-->
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<!--
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		-->
		<!-- BlackHole -->
		<!--

		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->

		<logger name="*" minlevel="Error" writeTo="errorFile" />
	</rules>
</nlog>